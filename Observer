import java.util.ArrayList;
import java.util.Collections;
import java.util.List;

interface Observer {
    //데이터 변경을 통보했을 때 처리하는 메소드
    void update();
}

abstract class Subject {
    //추상화 된 통보 대상 목록
    private final List<Observer> observers = new ArrayList<>();
    //통보 대상 추가
    public void attach(Observer observer) {
        observers.add(observer);
    }
    //통보 대상 제거
    public void detach(Observer observer) {
        observers.remove(observer);
    }
    //각 통보 대상에 변경을 통보
    public void notifyObservers() {
        for (Observer o : observers) o.update();
    }
}
//출력형태 2개를 가질 때
class TemperaturesRecord extends Subject {
    private final List<Integer> temperatures = new ArrayList<>(); //점수를 저장함
    //새로운 온도를 추가 (상태 변경)
    public void getTemperature(int temperature) {
        temperatures.add(temperature);  //기온 목록에 주어진 온도 추가
        notifyObservers();  //기온이 변경됨을 각 통보대상에게 통보
    }
    public List<Integer> getScoreRecord() {
        return temperatures;
    }
}
//목록 형태로 출력하는 클래스
class DataSheetView implements Observer {
    private final TemperaturesRecord temperaturesRecord;
    private final int viewCount;
    public DataSheetView(TemperaturesRecord temperaturesRecord, int viewCount) {
        this.temperaturesRecord = temperaturesRecord;
        this.viewCount = viewCount;
    }
    public void update() {
        List<Integer> record = temperaturesRecord.getScoreRecord();
        DisplayElement(record, viewCount);
    }
    private void DisplayElement(List<Integer> record, int viewCount) {
        System.out.println("List of " + viewCount + " entries: ");
        for (int i = 0; i < viewCount && i < record.size(); i++)
            System.out.println(record.get(i) + " ");
    }
}
//기온의 최대값 최소값만 출력하는 클래스
class MinMaxView implements Observer {
    private final TemperaturesRecord temperaturesRecord;
    public MinMaxView(TemperaturesRecord temperaturesRecord) {
        this.temperaturesRecord = temperaturesRecord;
    }
    public void update() {
        List<Integer> record = temperaturesRecord.getScoreRecord();
        displayScores(record);
    }
    private void displayScores(List<Integer> record) {
        int min = Collections.min(record, null);
        int max = Collections.max(record, null);
        System.out.println("Min: " + min + "도, Max: " + max + "도");
    }
}

public class test3 {
    public static void main(String[] args) {
        //3개까지의 기온만 출력함
        TemperaturesRecord scoreRecord = new TemperaturesRecord();
        //최대값, 최소값만 출력함
        DataSheetView dataSheetView = new DataSheetView(scoreRecord, 3);
        //각 통보 대상 클래스를 옵저버로 추가
        MinMaxView minMaxView = new MinMaxView(scoreRecord);
        scoreRecord.attach(dataSheetView);
        scoreRecord.attach(minMaxView);
        //5도씩 기온이 올라감
        for (int i = 1; i <= 4; i++) {
            int temperature = i * 5;
            System.out.println("\nAdding: " + temperature + "도");
            scoreRecord.getTemperature(temperature);
        }

    }
}

